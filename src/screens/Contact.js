import React, { useState } from "react";
import "./ContactForm.css";

const ContactForm = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    message: "",
  });

  const [isSubmitting, setIsSubmitting] = useState(false);
  const [formError, setFormError] = useState(null);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    setFormError(null);

    const message = `
üìû –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞:
–ò–º—è: ${formData.name}
Email: ${formData.email}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}
–°–æ–æ–±—â–µ–Ω–∏–µ:
${formData.message}
`;

    try {
      const response = await fetch(
        `https://api.telegram.org/bot7980825984:AAEj2E7Y2qbRy3pUAgJGCRKyUYkOlvkwLfA/sendMessage?chat_id=6951225935&text=${encodeURIComponent(
          message
        )}`
      );

      if (!response.ok) {
        throw new Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏");
      }

      alert("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
      setFormData({ name: "", email: "", phone: "", message: "" });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      setFormError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.");
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <section className="contact-form">
      <h2>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</h2>
      <p>–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>

      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label htmlFor="name">–ò–º—è:</label>
          <input
            type="text"
            id="name"
            name="name"
            value={formData.name}
            onChange={handleChange}
            required
          />
        </div>

        <div className="form-group">
          <label htmlFor="email">Email:</label>
          <input
            type="email"
            id="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            required
          />
        </div>

        <div className="form-group">
          <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω:</label>
          <input
            type="tel"
            id="phone"
            name="phone"
            value={formData.phone}
            onChange={handleChange}
            placeholder="+7 (900) 000-00-00"
            pattern="^\+?[0-9\s\-\(\)]{7,}$"
            title="–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
          />
        </div>

        <div className="form-group">
          <label htmlFor="message">–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
          <textarea
            id="message"
            name="message"
            value={formData.message}
            onChange={handleChange}
            required
          ></textarea>
        </div>

        {formError && <p className="error">{formError}</p>}

        <button type="submit" disabled={isSubmitting}>
          {isSubmitting ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
        </button>
      </form>
    </section>
  );
};

export default ContactForm;
