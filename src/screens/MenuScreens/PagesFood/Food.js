import React, { useLayoutEffect } from "react";
// import Papa from "papaparse";
import { useNavigate, useParams } from "react-router-dom";
import { HiOutlineArrowSmLeft } from "react-icons/hi";
import "./BreakFast.css";
// ‚¨áÔ∏è –ò–º–ø–æ—Ä—Ç Lottie
import Lottie from "lottie-react";
import foodLoader from "../../../assets/Loads/Animation - 1750954244050.json";

// üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
import SaladBackground from "../../../assets/img/SaladBackground.jpg";
import BreakfastImg from "../../../assets/img/Image.png";

// üé£ –•—É–∫
import { useFetchMenu } from "../../../hooks/useFetchMenu";

// –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const categoryDescriptions = {
  –∑–∞–≤—Ç—Ä–∞–∫–∏: {
    title: "–£—Ç—Ä–µ–Ω–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
    description: "–õ—É—á—à–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–µ–Ω—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ.",
  },
  —Å–∞–ª–∞—Ç—ã: {
    title: "–°–≤–µ–∂–∏–µ —Å–∞–ª–∞—Ç—ã",
    description:
      "–ü–æ–ª–µ–∑–Ω—ã–µ –∏ –≤–∫—É—Å–Ω—ã–µ —Å–∞–ª–∞—Ç—ã, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ —Å –∑–∞–±–æ—Ç–æ–π –æ –∑–¥–æ—Ä–æ–≤—å–µ.",
  },
  —Å—É–ø—ã: {
    title: "–¢–µ–ø–ª–æ –≤ —Ç–∞—Ä–µ–ª–∫–µ",
    description: "–°–≤–µ–∂–∏–µ –¥–æ–º–∞—à–Ω–∏–µ —Å—É–ø—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å.",
  },
  –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ–±–ª—é–¥–∞: {
    title: "–ë–ª—é–¥–∞ —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞",
    description: "–ö—É—Ö–Ω–∏ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ ‚Äî –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Å—ë!",
  },
  –≥–æ—Ä—è—á–µ–µ: {
    title: "–ì–ª–∞–≤–Ω—ã–µ –±–ª—é–¥–∞",
    description: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –≤—Ç–æ—Ä—ã–µ –±–ª—é–¥–∞ –¥–ª—è —Å—ã—Ç–Ω–æ–≥–æ –æ–±–µ–¥–∞.",
  },
  –≥–∞—Ä–Ω–∏—Ä—ã: {
    title: "–ê–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç –≤–∫—É—Å–∞",
    description: "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –≥–∞—Ä–Ω–∏—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ø–æ–ª–Ω—è—Ç –ª—é–±–æ–µ –±–ª—é–¥–æ.",
  },
  –≤—ã–ø–µ—á–∫–∞: {
    title: "–°–ª–∞–¥–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã",
    description: "–ò–∑—ã—Å–∫–∞–Ω–Ω—ã–µ –¥–µ—Å–µ—Ä—Ç—ã –¥–ª—è —Å–ª–∞–¥–∫–æ–µ–∂–µ–∫.",
  },
  –Ω–∞–ø–∏—Ç–∫–∏: {
    title: "–ù–∞ –ª—é–±–æ–π –≤–∫—É—Å",
    description: "–û—Å–≤–µ–∂–∞—é—â–∏–µ –∏ —Å–æ–≥—Ä–µ–≤–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏.",
  },
  –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {
    title: "–ï—â—ë –Ω–µ–º–Ω–æ–≥–æ?",
    description: "–•–æ—Ç–∏—Ç–µ —á–µ–≥–æ-–Ω–∏–±—É–¥—å –µ—â—ë? –£ –Ω–∞—Å –µ—Å—Ç—å –∏ —ç—Ç–æ.",
  },
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Food
const Food = () => {
  const navigate = useNavigate();
  const { category } = useParams(); // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ URL
  const decodedCategory = decodeURIComponent(category).toLowerCase(); // –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

  const { data, isLoading, error } = useFetchMenu(decodedCategory);

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
  const texts = categoryDescriptions[decodedCategory] || {
    title: decodedCategory,
    description: "–ú–µ–Ω—é –∑–∞–≥—Ä—É–∂–µ–Ω–æ.",
  };
  const getBannerUrl = (category) => {
    switch (category) {
      case "–∑–∞–≤—Ç—Ä–∞–∫–∏":
        return require("../../../assets/img/BreakfastBanner.jpg");
      case "—Å–∞–ª–∞—Ç—ã":
        return require("../../../assets/img/SaladsBanner.webp");
      case "—Å—É–ø—ã":
        return require("../../../assets/img/SoupBanner.jpg");
      case "–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ–±–ª—é–¥–∞":
        return require("../../../assets/img/nationalBanner.jpg");
      case "–≥–æ—Ä—è—á–µ–µ":
        return require("../../../assets/img/SecondBanner.jpg");
      case "–≥–∞—Ä–Ω–∏—Ä—ã":
        return require("../../../assets/img/garnishBanner.png");
      case "–≤—ã–ø–µ—á–∫–∞":
        return require("../../../assets/img/dessertBanner.jpg");
      case "–Ω–∞–ø–∏—Ç–∫–∏":
        return require("../../../assets/img/drinksBanner.jpg");
      default:
        return BreakfastImg;
    }
  };
  // üîÅ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useLayoutEffect(() => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  }, []);

  // üîÅ –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  const LottieLoader = () => (
    <div style={styles.loaderOverlay}>
      <Lottie animationData={foodLoader} style={styles.lottie} />
      <p style={styles.loaderText} className="loaderText">
        –ó–∞–≥—Ä—É–∂–∞–µ–º –±–ª—é–¥–∞...
      </p>
    </div>
  );

  return (
    <div style={{ marginBottom: "60px" }}>
      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
      <HiOutlineArrowSmLeft
        onClick={() => navigate(-1)}
        style={styles.arrow}
        className="arrow"
      />

      {/* –ë–∞–Ω–Ω–µ—Ä */}
      <div style={styles.picture}>
        <img src={getBannerUrl(decodedCategory)} alt={texts.title} />
        <p style={styles.breakfast} className="PreviewTextMenu">
          {texts.title}
        </p>
      </div>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
      <div className="container">
        <p
          className="words"
          style={{
            fontWeight: "bold",
            fontSize: "20px",
            marginBottom: "10px",
          }}
        >
          {texts.title}
        </p>
        <text style={{ color: "#2C2C2C" }} className="description">
          {texts.description}
        </text>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∏ –º–µ–Ω—é */}
        {isLoading ? (
          <LottieLoader />
        ) : error ? (
          <p style={{ color: "red", padding: "20px" }}>{error}</p>
        ) : (
          <div
            style={{
              display: "flex",
              flexWrap: "wrap",
              justifyContent: "space-around",
              marginTop: "0px",
            }}
          >
            {data.map((item, index) => (
              <div style={styles.item} className="breakfastItem" key={index}>
                <div style={styles.blockimg}>
                  <img
                    src={item.image_url || SaladBackground}
                    style={styles.img}
                    alt={item.name}
                  />
                </div>
                <div style={styles.content}>
                  <p className="FoodTitle">{item.name}</p>
                  <text className="foodDescription">
                    {item.description || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}
                  </text>
                  <p className="weight">({item.weight})</p>
                  <div className="price">{item.price} —Ä—É–±.</div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default Food;

// üé® –°—Ç–∏–ª–∏ (—Å–∫–æ–ø–∏—Ä—É–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π CSS –º–æ–¥—É–ª—å)
const styles = {
  arrow: {
    cursor: "pointer",
    transition: "all 0.5s ease",
    background: "black",
    marginRight: "6px",
    padding: "10px",
    fontSize: "20px",
    borderRadius: "50%",
    color: "white",
    top: "14%",
    left: "1%",
    position: "fixed",
    zIndex: "2",
  },
  img: {
    width: "100%",
    borderTopLeftRadius: "15px",
    borderTopRightRadius: "15px",
  },
  content: {
    paddingBottom: "50px",
    paddingRight: "15px",
    paddingLeft: "15px",
  },
  item: {
    maxWidth: "300px",
    width: "100%",
    background: "#2b2b2a",
    borderRadius: "15px",
    color: "white",
    marginTop: "40px",
    marginBottom: "20px",
    boxSizing: "border-box",
  },

  blockimg: {
    overflow: "hidden",
    height: "200px",
  },
  loaderOverlay: {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba(0, 0, 0, 0.75)",
    display: "flex",
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "center",
    zIndex: 10,
  },
  lottie: {
    width: "200px",
    height: "200px",
  },
  loaderText: {
    marginTop: "15px",
    fontSize: "18px",
    fontWeight: "500",
    textAlign: "center",
    opacity: 0.9,
  },

  // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç–∏–ª–∏ ...

  picture: {
    position: "relative",
    overflow: "hidden",
    height: "300px", // —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    textAlign: "center",
    backgroundColor: "#f0f0f0",
    marginBottom: "2rem",
  },

  bannerImage: {
    width: "100%",
    height: "100%",
    objectFit: "cover", // —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏, –æ–±—Ä–µ–∑–∞–µ—Ç –ª–∏—à–Ω–µ–µ
    display: "block",
  },

  breakfast: {
    position: "absolute",
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)",
    color: "white",
    fontSize: "28px",
    fontWeight: "bold",
    textShadow: "2px 2px 6px rgba(0,0,0,0.7)",
    margin: 0,
    zIndex: "2",
  },
};
